From 903e743b87f410be5ef8472f3c2ef45bed952c91 Mon Sep 17 00:00:00 2001
From: John Johansen <john.johansen@canonical.com>
Date: Mon, 31 Aug 2020 19:01:06 -0700
Subject: [PATCH] parser: Fix expansion of variables in unix rules addr=
 conditional

The parser is not treating unix addr as a path and filtering slashes
after variable expansion. This can lead to errors where

@{foo}=/a/
unix bind addr=@{foo}/bar,

will always fail because addr is being matched as /a//bar instead of
/a/bar.

MR: https://gitlab.com/apparmor/apparmor/-/merge_requests/607
Fixes: https://bugs.launchpad.net/apparmor/+bug/1856738
Signed-off-by: John Johansen <john.johansen@canonical.com>
(cherry picked from commit 6af05006d9dd1bfaa36e555841496a4cbf3992ee)
---
 parser/af_unix.cc     | 2 ++
 parser/parser.h       | 1 +
 parser/parser_regex.c | 2 +-
 3 files changed, 4 insertions(+), 1 deletion(-)

--- apparmor-2.13.3.orig/parser/af_unix.cc
+++ apparmor-2.13.3/parser/af_unix.cc
@@ -151,9 +151,11 @@ int unix_rule::expand_variables(void)
 	error = expand_entry_variables(&addr);
 	if (error)
 		return error;
+	filter_slashes(addr);
 	error = expand_entry_variables(&peer_addr);
 	if (error)
 		return error;
+	filter_slashes(peer_addr);
 
 	return 0;
 }
--- apparmor-2.13.3.orig/parser/parser.h
+++ apparmor-2.13.3/parser/parser.h
@@ -376,6 +376,7 @@ extern int post_process_entry(struct cod
 extern int process_policydb(Profile *prof);
 
 extern int process_policy_ents(Profile *prof);
+extern void filter_slashes(char *path);
 
 /* parser_variable.c */
 int expand_entry_variables(char **name);
--- apparmor-2.13.3.orig/parser/parser_regex.c
+++ apparmor-2.13.3/parser/parser_regex.c
@@ -47,7 +47,7 @@ enum error_type {
  * that's a distinct namespace in linux) and trailing slashes.
  * NOTE: modifies in place the contents of the path argument */
 
-static void filter_slashes(char *path)
+void filter_slashes(char *path)
 {
 	char *sptr, *dptr;
 	BOOL seen_slash = 0;
