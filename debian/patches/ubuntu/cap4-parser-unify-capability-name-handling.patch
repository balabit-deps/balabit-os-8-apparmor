From 4e194b2f3a567ca3ad2604e211c2ac112801035d Mon Sep 17 00:00:00 2001
From: John Johansen <john.johansen@canonical.com>
Date: Tue, 23 Jun 2020 04:07:17 -0700
Subject: [PATCH] parser: unify capability name handling

There are currently two capability name tables the one that is
autogenerated and an internal hardcoded name table.

Now that the autogenerated table has been converted to a base
static table we can drop the internal static table. This
removes the chance of getting the tables getting out of sync.

Signed-off-by: John Johansen <john.johansen@canonical.com>
(cherry picked from commit fb9c5f9bcfd9a8d73b8eb9a8336693b4bce9fa6f)
---
 parser/parser_misc.c | 58 +++++++++-----------------------------------
 1 file changed, 11 insertions(+), 47 deletions(-)

diff --git a/parser/parser_misc.c b/parser/parser_misc.c
index 8d1553d78..18e5d2af1 100644
--- a/parser/parser_misc.c
+++ b/parser/parser_misc.c
@@ -63,7 +63,7 @@ int is_blacklisted(const char *name, const char *path)
 
 struct keyword_table {
 	const char *keyword;
-	int token;
+	unsigned int token;
 };
 
 static struct keyword_table keyword_table[] = {
@@ -838,52 +838,16 @@ void debug_cod_entries(struct cod_entry *list)
 	}
 }
 
-
-static const char *capnames[] = {
-	"chown",
-	"dac_override",
-	"dac_read_search",
-	"fowner",
-	"fsetid",
-	"kill",
-	"setgid",
-	"setuid",
-	"setpcap",
-	"linux_immutable",
-	"net_bind_service",
-	"net_broadcast",
-	"net_admin",
-	"net_raw",
-	"ipc_lock",
-	"ipc_owner",
-	"sys_module",
-	"sys_rawio",
-	"sys_chroot",
-	"sys_ptrace",
-	"sys_pacct",
-	"sys_admin",
-	"sys_boot",
-	"sys_nice",
-	"sys_resource",
-	"sys_time",
-	"sys_tty_config",
-	"mknod",
-	"lease",
-	"audit_write",
-	"audit_control",
-	"setfcap",
-	"mac_override",
-	"syslog",
-};
-
 const char *capability_to_name(unsigned int cap)
 {
-	const char *capname;
+	int i;
 
-	capname = (cap < (sizeof(capnames) / sizeof(char *))
-		   ? capnames[cap] : "invalid-capability");
+	for (i = 0; capability_table[i].keyword; i++) {
+		if (capability_table[i].token == cap)
+			return capability_table[i].keyword;
+	}
 
-	return capname;
+	return "invalid-capability";
 }
 
 void __debug_capabilities(uint64_t capset, const char *name)
@@ -891,10 +855,10 @@ void __debug_capabilities(uint64_t capset, const char *name)
 	unsigned int i;
 
 	printf("%s:", name);
-	for (i = 0; i < (sizeof(capnames)/sizeof(char *)); i++) {
-		if (((1ull << i) & capset) != 0) {
-			printf (" %s", capability_to_name(i));
-		}
+
+	for (i = 0; capability_table[i].keyword; i++) {
+		if ((1ull << capability_table[i].token) & capset)
+			printf (" %s", capability_table[i].keyword);
 	}
 	printf("\n");
 }
-- 
2.34.1

